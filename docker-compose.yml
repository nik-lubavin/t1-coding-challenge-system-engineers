version: "3.8"
services:
  database:
    container_name: t1-coding-challenge-database
    image: mongo:4.4.3
    ports:
      - "27017:27017"

  zookeeper:
    container_name: t1-coding-challenge-zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    container_name: t1-coding-challenge-kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_BROKER_ID: 1
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"

  kafka-producer:
    container_name: t1-coding-challenge-kafka-producer
    build: ./kafka-producer
    depends_on:
    - kafka

  # frontend-service:
  #   container_name: t1-coding-challenge-frontend-service
  #   build: ./frontend-service
  #   ports:
  #     - "3001:3001"
  #   depends_on:
  #     - kafka-producer

  calculation-service:
    container_name: t1-coding-challenge-calculation-service
    build: ./calculation-service
    depends_on:
      - kafka-producer
      - database

  # frontend:
  #   container_name: t1-coding-challenge-frontend
  #   build:
  #     context: ./frontend
  #     target: dev
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - frontend-service
